"""Add detailed intake process fields and tables

Revision ID: b2654a3a9f3c
Revises: 6193346c5153
Create Date: 2025-06-19 13:37:45.025416

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision: str = 'b2654a3a9f3c'
down_revision: Union[str, Sequence[str], None] = '6193346c5153'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = Inspector.from_engine(bind)
    tables = inspector.get_table_names()

    if 'insurances' not in tables:
        op.create_table('insurances',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('carrier', sa.String(), nullable=False),
            sa.Column('policy_number', sa.String(), nullable=False),
            sa.Column('intake_process_id', sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(['intake_process_id'], ['intake_processes.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    if 'studies' not in tables:
        op.create_table('studies',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('cpt_code', sa.String(), nullable=False),
            sa.Column('body_part', sa.String(), nullable=False),
            sa.Column('contrast', sa.Boolean(), nullable=True),
            sa.Column('intake_process_id', sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(['intake_process_id'], ['intake_processes.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    op.add_column('intake_processes', sa.Column('date_of_injury', sa.Date(), nullable=True))
    op.add_column('intake_processes', sa.Column('referred_by', sa.String(), nullable=True))
    op.add_column('intake_processes', sa.Column('attorney_id', sa.String(), nullable=True))
    op.add_column('intake_processes', sa.Column('notes', sa.Text(), nullable=True))
    op.add_column('intake_processes', sa.Column('is_lien_case', sa.Boolean(), nullable=True))
    op.add_column('intake_processes', sa.Column('needs_transportation', sa.Boolean(), nullable=True))
    op.alter_column('intake_processes', 'appointment_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('intake_processes', 'appointment_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('intake_processes', 'needs_transportation')
    op.drop_column('intake_processes', 'is_lien_case')
    op.drop_column('intake_processes', 'notes')
    op.drop_column('intake_processes', 'attorney_id')
    op.drop_column('intake_processes', 'referred_by')
    op.drop_column('intake_processes', 'date_of_injury')
    op.drop_table('studies')
    op.drop_table('insurances')
    # ### end Alembic commands ###
